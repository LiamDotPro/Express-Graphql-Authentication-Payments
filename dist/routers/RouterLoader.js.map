{"version":3,"sources":["../../routers/RouterLoader.js"],"names":["loadRouters","routerDir","readdirSync","app","foundModuleNames","map","el","routePrefix","split","route","forEach","router","require","use","default"],"mappings":";;;;;QAQgBA,W,GAAAA,W;;AARhB;;;;;;AAEA,IAAIC,YAAY,aAAGC,WAAH,CAAe,cAAf,CAAhB;;AAEA;;;;AAIO,SAASF,WAAT,CAAqBG,GAArB,EAA0B;;AAE7B,QAAIC,mBAAmBH,UAAUI,GAAV,CAAc,UAACC,EAAD,EAAQ;AACzC,eAAO;AACHC,yBAAa,SAASD,GAAGE,KAAH,CAAS,GAAT,EAAc,CAAd,CADnB;AAEHC,mBAAO,UAAUH,GAAGE,KAAH,CAAS,GAAT,EAAc,CAAd,CAAV,GAA6B;AAFjC,SAAP;AAIH,KALsB,CAAvB;;AAOAJ,qBAAiBM,OAAjB,CAAyB,UAACJ,EAAD,EAAQ;AAC7B,YAAIK,SAASC,QAAQN,GAAGG,KAAX,CAAb;AACAN,YAAIU,GAAJ,CAAQP,GAAGC,WAAX,EAAwBI,OAAOG,OAA/B;AACH,KAHD;AAIH","file":"RouterLoader.js","sourcesContent":["import fs from 'fs';\r\n\r\nlet routerDir = fs.readdirSync('./routers/v1');\r\n\r\n/**\r\n * Loads all of the router modules.\r\n * @param app\r\n */\r\nexport function loadRouters(app) {\r\n\r\n    let foundModuleNames = routerDir.map((el) => {\r\n        return {\r\n            routePrefix: '/v1/' + el.split('.')[0],\r\n            route: './v1/' + el.split('.')[0] + '.js'\r\n        };\r\n    });\r\n\r\n    foundModuleNames.forEach((el) => {\r\n        let router = require(el.route);\r\n        app.use(el.routePrefix, router.default);\r\n    });\r\n}"]}