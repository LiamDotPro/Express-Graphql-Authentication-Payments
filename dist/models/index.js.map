{"version":3,"sources":["../../models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","use_env_variable","sequelize","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAYC,QAAQ,IAAR,CAAhB;AACA,IAAIC,OAAYD,QAAQ,MAAR,CAAhB;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;AACA,IAAIG,WAAYF,KAAKE,QAAL,CAAcC,UAAd,CAAhB;AACA,IAAIC,MAAYC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAxC;AACA,IAAIC,SAAYR,QAAQS,YAAY,cAApB,EAAoCJ,GAApC,CAAhB;AACA,IAAIK,KAAY,EAAhB;;AAEA,IAAIF,OAAOG,gBAAX,EAA6B;AAC3B,MAAIC,YAAY,IAAIV,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOG,gBAAnB,CAAd,EAAoDH,MAApD,CAAhB;AACD,CAFD,MAEO;AACL,MAAII,YAAY,IAAIV,SAAJ,CAAcM,OAAOK,QAArB,EAA+BL,OAAOM,QAAtC,EAAgDN,OAAOO,QAAvD,EAAiEP,MAAjE,CAAhB;AACD;;AAEDT,GACGiB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEU,gBAAQ;AACd,SAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,gBAAQ;AACf,MAAIC,QAAQV,UAAU,QAAV,EAAoBX,KAAKsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAZ;AACAR,KAAGY,MAAME,IAAT,IAAiBF,KAAjB;AACD,CARH;;AAUAG,OAAOC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,qBAAa;AACnC,MAAIX,GAAGiB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BlB,OAAGiB,SAAH,EAAcC,SAAd,CAAwBlB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGE,SAAH,GAAeA,SAAf;AACAF,GAAGR,SAAH,GAAeA,SAAf;;AAEA2B,OAAOC,OAAP,GAAiBpB,EAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar fs        = require('fs');\nvar path      = require('path');\nvar Sequelize = require('sequelize');\nvar basename  = path.basename(__filename);\nvar env       = process.env.NODE_ENV || 'development';\nvar config    = require(__dirname + '/config.json')[env];\nvar db        = {};\n\nif (config.use_env_variable) {\n  var sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  var sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    var model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}