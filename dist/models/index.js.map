{"version":3,"sources":["../../models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","use_env_variable","sequelize","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;AACA,IAAIG,WAAWF,KAAKE,QAAL,CAAcC,UAAd,CAAf;AACA,IAAIC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;AACA,IAAIC,SAASR,QAAQS,YAAY,sBAApB,EAA4CJ,GAA5C,CAAb;AACA,IAAIK,KAAK,EAAT;;AAEA,IAAIF,OAAOG,gBAAX,EAA6B;AACzB,QAAIC,YAAY,IAAIV,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOG,gBAAnB,CAAd,EAAoDH,MAApD,CAAhB;AACH,CAFD,MAEO;AACH,QAAII,YAAY,IAAIV,SAAJ,CAAcM,OAAOK,QAArB,EAA+BL,OAAOM,QAAtC,EAAgDN,OAAOO,QAAvD,EAAiEP,MAAjE,CAAhB;AACH;;AAEDT,GAAGiB,WAAH,CAAeP,SAAf,EACKQ,MADL,CACY,gBAAQ;AACZ,WAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACH,CAHL,EAIKC,OAJL,CAIa,gBAAQ;AACb,QAAIC,QAAQV,UAAU,QAAV,EAAoBX,KAAKsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAZ;AACAR,OAAGY,MAAME,IAAT,IAAiBF,KAAjB;AACH,CAPL;;AASAG,OAAOC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,qBAAa;AACjC,QAAIX,GAAGiB,SAAH,EAAcC,SAAlB,EAA6B;AACzBlB,WAAGiB,SAAH,EAAcC,SAAd,CAAwBlB,EAAxB;AACH;AACJ,CAJD;;AAMAA,GAAGE,SAAH,GAAeA,SAAf;AACAF,GAAGR,SAAH,GAAeA,SAAf;;AAEA2B,OAAOC,OAAP,GAAiBpB,EAAjB","file":"index.js","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar Sequelize = require('sequelize');\nvar basename = path.basename(__filename);\nvar env = process.env.NODE_ENV || 'development';\nvar config = require(__dirname + '/../config/config.js')[env];\nvar db = {};\n\nif (config.use_env_variable) {\n    var sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n    var sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname)\n    .filter(file => {\n        return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n    })\n    .forEach(file => {\n        var model = sequelize['import'](path.join(__dirname, file));\n        db[model.name] = model;\n    });\n\nObject.keys(db).forEach(modelName => {\n    if (db[modelName].associate) {\n        db[modelName].associate(db);\n    }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}