{"version":3,"sources":["../../db/conn.js"],"names":["sequelize","host","dialect","operatorsAliases","pool","max","min","acquire","idle","authenticate","then","console","log","catch","error","err"],"mappings":";;;;;;;AAAA;;;;;;AAEO,IAAIA,gCAAY,wBACnB,QADmB,EAEnB,MAFmB,EAGnB,SAHmB,EAInB;AACIC,UAAM,gBADV;AAEIC,aAAS,UAFb;AAGIC,sBAAkB,KAHtB;;AAKIC,UAAM;AACFC,aAAK,CADH;AAEFC,aAAK,CAFH;AAGFC,iBAAS,KAHP;AAIFC,cAAM;AAJJ;AALV,CAJmB,CAAhB;;AAiBPR,UAAUS,YAAV,GAAyBC,IAAzB,CAA8B,YAAM;AAChCC,YAAQC,GAAR,CAAY,+CAAZ;AACH,CAFD,EAEGC,KAFH,CAES,eAAO;AACZF,YAAQG,KAAR,CAAc,oCAAd,EAAoDC,GAApD;AACH,CAJD;;AAMA;AACA","file":"conn.js","sourcesContent":["import Sequelize from 'sequelize';\r\n\r\nexport let sequelize = new Sequelize(\r\n    'ecomdb',\r\n    'zeus',\r\n    'test123',\r\n    {\r\n        host: '109.237.26.131',\r\n        dialect: 'postgres',\r\n        operatorsAliases: false,\r\n\r\n        pool: {\r\n            max: 5,\r\n            min: 0,\r\n            acquire: 30000,\r\n            idle: 10000\r\n        }\r\n    });\r\n\r\nsequelize.authenticate().then(() => {\r\n    console.log('Connection has been established successfully.');\r\n}).catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n});\r\n\r\n// The following can be imported to derive a connection from pooling to be used.\r\n// import {sequelize} from './db/conn';"]}