{"version":3,"sources":["../../db/conn.js"],"names":["connection","host","dialect","operatorsAliases","pool","max","min","acquire","idle","logging","authenticate","then","console","log","catch","error","err"],"mappings":";;;;;;;AAAA;;;;;;AAEO,IAAIA,kCAAa,wBACpB,QADoB,EAEpB,MAFoB,EAGpB,SAHoB,EAIpB;AACIC,UAAM,gBADV;AAEIC,aAAS,UAFb;AAGIC,sBAAkB,KAHtB;;AAKIC,UAAM;AACFC,aAAK,CADH;AAEFC,aAAK,CAFH;AAGFC,iBAAS,KAHP;AAIFC,cAAM;AAJJ,KALV;AAWI;AACAC,aAAS;AAZb,CAJoB,CAAjB;;AAmBPT,WAAWU,YAAX,GAA0BC,IAA1B,CAA+B,YAAM;AACjCC,YAAQC,GAAR,CAAY,2DAAZ;AACH,CAFD,EAEGC,KAFH,CAES,eAAO;AACZF,YAAQG,KAAR,CAAc,oCAAd,EAAoDC,GAApD;AACH,CAJD;;AAMA;;;AAGA","file":"conn.js","sourcesContent":["import Sequelize from 'sequelize';\r\n\r\nexport let connection = new Sequelize(\r\n    'ecomdb',\r\n    'zeus',\r\n    'test123',\r\n    {\r\n        host: '109.237.26.131',\r\n        dialect: 'postgres',\r\n        operatorsAliases: false,\r\n\r\n        pool: {\r\n            max: 5,\r\n            min: 0,\r\n            acquire: 30000,\r\n            idle: 10000\r\n        },\r\n        // disable logging; default: console.log\r\n        logging: false\r\n    });\r\n\r\nconnection.authenticate().then(() => {\r\n    console.log('Connection has been established successfully to postgres.');\r\n}).catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n});\r\n\r\n/**\r\n *  The following can be imported to derive a connection from pooling to be used.\r\n */\r\n// import {connection} from './db/conn';"]}